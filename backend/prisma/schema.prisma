// This is your Prisma schema file for Career Launchpad backend
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User Model
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String?
  name      String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  careerPaths     CareerPath[]
  learningProgress LearningProgress[]
  jobApplications JobApplication[]
  aiInteractions  AIInteraction[]

  @@map("users")
}

// Career Path Model
model CareerPath {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String?
  status      String   @default("active")
  progress    Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("career_paths")
}

// Learning Progress Model
model LearningProgress {
  id             String   @id @default(uuid())
  userId         String
  courseId       String
  courseName     String
  progress       Int      @default(0)
  completionRate Int      @default(0)
  status         String   @default("in_progress")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("learning_progress")
}

// Job Application Model
model JobApplication {
  id          String   @id @default(uuid())
  userId      String
  jobTitle    String
  company     String
  status      String   @default("pending")
  appliedAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("job_applications")
}

// AI Interaction Model
model AIInteraction {
  id        String   @id @default(uuid())
  userId    String
  query     String
  response  String
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("ai_interactions")
}
